version: '3.7'
networks:
  springcloud:
services:
  postgres-db-container:
    image: postgres-db-image:v1
    build: ./postgres-db
    ports:
      - "5432:5432"
    restart: always
    networks:
      - springcloud
    environment:
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: db_springboot_cloud
  mysql-db-container:
    image: mysql-db-image:v1
    build: ./mysql-db
    ports:
      - "3306:3306"
    restart: always
    networks:
      - springcloud
    environment:
      WAIT_HOSTS: postgres-db-container:5432
      MYSQL_ROOT_PASSWORD: 12345 
      MYSQL_DATABASE: db_springboot_cloud
    depends_on:
      - postgres-db-container
  rabbit-mq-container:
    image: rabbit-mq-image
    build: ./rabbit-mq
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always
    networks:
      - springcloud
    environment:
      WAIT_HOSTS: mysql-db-container:3306
    depends_on:
      - mysql-db-container
  zipkin-server-container:
    image: zipkin-server-image:v1
    build: ./zipkin-server
    ports:
      - "9411:9411"
    restart: always
    networks:
      - springcloud
    environment:
      WAIT_HOSTS: rabbit-mq-container:15672, rabbit-mq-container:5672
      RABBIT_ADDRESSES: rabbit-mq-container:5672
      MYSQL_HOST: mysql-db-container
      MYSQL_TCP_PORT: 3306
      MYSQL_DB: zipkin_db
      MYSQL_USER: zipkin
      MYSQL_PASS: zipkinpass
      STORAGE_TYPE: mysql
    depends_on:
      - rabbit-mq-container
  config-server-container:
    image: config-server-image:v1
    build: ./config-server
    ports:
      - "8888:8888"
    restart: always
    networks:
      - springcloud
    environment:
      WAIT_HOSTS: zipkin-server-container:9411
  eureka-server-container:
    image: eureka-server-image:v1
    build: ./eureka-server
    ports:
      - "8761:8761"
    restart: always
    networks:
      - springcloud
    environment:
      WAIT_HOSTS: zipkin-server-container:9411
  service-user-role-container:
    image: service-user-role-image:v1
    build: ./service-user-role
    restart: always
    networks:
      - springcloud
    ports:
      - "9000:9000"
    environment:
      WAIT_HOSTS: config-server-container:8888, eureka-server-container:8761
    env_file:
      - './docker-variables/spring.env'
    depends_on:
      - mysql-db-container
      - config-server-container
      - eureka-server-container
      - rabbit-mq-container
      - zipkin-server-container
  service-email-container:
    image: service-email-image:v1
    build: ./service-email
    ports:
      - "8989:8989"
    environment:
      WAIT_HOSTS: config-server-container:8888, eureka-server-container:8761
    networks:
      - springcloud
    env_file:
      - 'docker-variables/spring.env'
    depends_on:
      - config-server-container
      - eureka-server-container
      - rabbit-mq-container
      - zipkin-server-container
      - service-user-role-container
  service-register-container:
    image: service-register-image:v1
    build: ./service-register
    ports:
      - "9090:9090"
    environment:
      WAIT_HOSTS: config-server-container:8888, eureka-server-container:8761
    restart: always
    networks:
      - springcloud
    env_file:
      - 'docker-variables/spring.env'
    depends_on:
      - config-server-container
      - eureka-server-container
      - rabbit-mq-container
      - zipkin-server-container
      - service-user-role-container
  # service-auth-container:
  #   image: service-auth-image:v1
  #   build: ./service-auth
  #   ports:
  #     - "9100:9100"
  #   restart: always
  #   networks:
  #     - springcloud
  #   env_file:
  #     - 'docker-variables/spring.env'
  #   depends_on:
  #     - service-user-role-container
  # service-producer-container-1:
  #   image: service-producer-image:v1
  #   build: ./service-producer
  #   restart: always
  #   networks:
  #     - springcloud
  #   env_file:
  #     - 'docker-variables/spring.env'
  #   depends_on:
  #     - service-auth-container
  # service-producer-container-2:
  #   image: service-producer-image:v1
  #   build: ./service-producer
  #   restart: always
  #   networks:
  #     - springcloud
  #   env_file:
  #     - 'docker-variables/spring.env'
  #   depends_on:
  #     - service-auth-container
  # service-client-container:
  #   image: service-client-image:v1
  #   build: ./service-client
  #   ports:
  #     - "8002:8002"
  #   restart: always
  #   networks:
  #     - springcloud
  #   env_file:
  #     - 'docker-variables/spring.env'
  #   depends_on:
  #     - service-producer-container-1
  #     - service-producer-container-2
  # zuul-gateway-container:
  #   image: zuul-gateway-image:v1
  #   build: ./zuul-gateway
  #   ports:
  #     - "8090:8090"
  #   restart: always
  #   networks:
  #     - springcloud
  #   env_file:
  #     - 'docker-variables/spring.env'
  #   depends_on:
  #     - service-client-container