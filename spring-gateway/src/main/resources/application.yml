# resilience4j:
#   circuitbreaker:
#     configs:
#       nameConfigCircuitBreaker:
#         sliding-window-size: 6 # Rango de peticiones a medir
#         failure-rate-threshold: 50 # Porcentaje de fallo permitido para no abrir el circuito
#         wait-duration-in-open-state: 20s # Tiempo de espera para cerrar de nuevo el circuito
#         permitted-number-of-calls-in-half-open-state: 4 # Numero permitido de peticiones en estado medio-abierto
#         slow-call-rate-threshold: 50 # Porcentaje permitido de llamadas con timeout
#         slow-call-duration-threshold: 2s # Tiempo de llamado considerado lento para el circuito
#     instances: # Circuitos con configuraci贸n asociada
#       productos: # Nombre del circuito
#         base-config: nameConfigCircuitBreaker # Nombre de configuraci贸n para el circuito
#   timeLimiter:
#     configs:
#       nameConfigCircuitBreaker:
#         timeout-duration: 6s # (TIME OUT) Tiempo de espera del circuito
#     instances:
#       productos:
#         base-config: nameConfigCircuitBreaker

spring:
  cloud:
    gateway:
      routes:
      - id: service-producer # Identificador
        uri: lb://service-producer # Nombre del microservicio
        predicates:
          - Path=/gateway/api/producer/** # Prefijo que se antepone a las rutas del microservicio
          # - Header= token, \d+ # Regla que obliga a que el token sea numerico
          # - Header=Content-Type, application/json # Regla que obliga a que el Content-Type sea application/json
          # - Method=GET, POST # Regla que obliga a que los metodos de las peticiones solo sean GET o POST
          # - Query=color # Regla que obliga a que los query deban enviar un name=color, el valor no es obligatorio
          # - Cookie=color, azul # Regla que obliga a que en las cookies deban enviar un name=color value=azul
          # Listado de reglas
          # https://spring.io/projects/spring-cloud-gateway#learn
          # Current -> Reference Doc. -> Route Predicate Factories
        filters:
          # - CircuitBreaker=productos
          - StripPrefix=3 # Define la cantida de paths que pertenecen al gateway
          - ExampleCookieName=Custom Message, user, jduquer
          # - name: Specific # Prefijo de la clase Specific/GatewayFilterFactory.java
          #   args: # Datos que van en la sub clase Cookie de la clase SpecificGatewayFilterFactory.java
          #     message: Custom Message # valor para atributo
          #     name: user # valor para atributo
          #     value: jduquer # valor para atributo sin espacios
      - id: service-client
        uri: lb://service-client
        predicates:
          - Path=/gateway/api/client/**
        filters:
          - StripPrefix=3
          - AddRequestHeader=token-request, 123456 # Agrega un header a la petici贸n
          - AddRequestParameter=nameRequestParameter, jonathan # Agrega un parametro a la petici贸n
          - AddResponseHeader=token-response, 987654 # Agrega un header a la respuesta
          - SetResponseHeader=Content-Type, text/plain # Actualiza un header existente a la respuesta
          # Listado de filtros
          # https://spring.io/projects/spring-cloud-gateway#learn
          # Current -> Reference Doc. -> GatewayFilter Factories